"use strict";var _interopRequireDefault3 = require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireDefault2 = _interopRequireDefault3(require("@babel/runtime/helpers/interopRequireDefault"));Object.defineProperty(exports, "__esModule", { value: true });var _events = require("events");var EventEmitter = _events.EventEmitter;
var _ObserveLogs = require("./ObserveLogs");var ObserveLogs = (0, _interopRequireDefault2["default"])(_ObserveLogs)["default"];

var emitter = new EventEmitter().setMaxListeners(0);

var listenStarted = false;
var lastDocId = null;

function observeLogs() {
  listenStarted = false;
  new ObserveLogs({
    type: 'started',
    collectionName: null,
    arguments: null,
    date: new Date() }).
  save().then(function (result) {
    var cursor = ObserveLogs.
    find().
    tailable({ awaitdata: true }).
    cursor();

    cursor.on('data', function (doc) {
      if (!listenStarted && String(result._id) == String(doc._id)) {
        listenStarted = true;
        emitter.emit('ready');
      }
      if (listenStarted) {
        emitter.emit(doc.collectionName, doc);
        lastDocId = String(doc._id);
      } else if (lastDocId && lastDocId == String(doc._id)) {
        listenStarted = true;
        emitter.emit('ready');
      }
    });

    cursor.on('close', function () {
      console.log('closing...');
      emitter.emit('notready');
      setTimeout(observeLogs, 1000);
    });

    cursor.on('error', function (error) {
      console.error(error);
      cursor.destroy();
    });

  }, function (err) {
    setTimeout(observeLogs, 1000);
    console.error(err);
  });
}

observeLogs();exports["default"] =

emitter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbWl0dGVyLmpzIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsIk9ic2VydmVMb2dzIiwiZW1pdHRlciIsInNldE1heExpc3RlbmVycyIsImxpc3RlblN0YXJ0ZWQiLCJsYXN0RG9jSWQiLCJvYnNlcnZlTG9ncyIsInR5cGUiLCJjb2xsZWN0aW9uTmFtZSIsImFyZ3VtZW50cyIsImRhdGUiLCJEYXRlIiwic2F2ZSIsInRoZW4iLCJyZXN1bHQiLCJjdXJzb3IiLCJmaW5kIiwidGFpbGFibGUiLCJhd2FpdGRhdGEiLCJvbiIsImRvYyIsIlN0cmluZyIsIl9pZCIsImVtaXQiLCJjb25zb2xlIiwibG9nIiwic2V0VGltZW91dCIsImVycm9yIiwiZGVzdHJveSIsImVyciJdLCJtYXBwaW5ncyI6ImdSQUFBLGdDLElBQVFBLFksV0FBQUEsWTtBQUNSLDRDLElBQU9DLFc7O0FBRVAsSUFBTUMsT0FBTyxHQUFHLElBQUlGLFlBQUosR0FBbUJHLGVBQW5CLENBQW1DLENBQW5DLENBQWhCOztBQUVBLElBQUlDLGFBQWEsR0FBRyxLQUFwQjtBQUNBLElBQUlDLFNBQVMsR0FBRyxJQUFoQjs7QUFFQSxTQUFTQyxXQUFULEdBQXNCO0FBQ2xCRixFQUFBQSxhQUFhLEdBQUcsS0FBaEI7QUFDQSxNQUFJSCxXQUFKLENBQWdCO0FBQ1pNLElBQUFBLElBQUksRUFBQyxTQURPO0FBRVpDLElBQUFBLGNBQWMsRUFBQyxJQUZIO0FBR1pDLElBQUFBLFNBQVMsRUFBQyxJQUhFO0FBSVpDLElBQUFBLElBQUksRUFBQyxJQUFJQyxJQUFKLEVBSk8sRUFBaEI7QUFLR0MsRUFBQUEsSUFMSCxHQUtVQyxJQUxWLENBS2UsVUFBQ0MsTUFBRCxFQUFVO0FBQ3JCLFFBQU1DLE1BQU0sR0FBR2QsV0FBVztBQUNyQmUsSUFBQUEsSUFEVTtBQUVWQyxJQUFBQSxRQUZVLENBRUQsRUFBRUMsU0FBUyxFQUFHLElBQWQsRUFGQztBQUdWSCxJQUFBQSxNQUhVLEVBQWY7O0FBS0FBLElBQUFBLE1BQU0sQ0FBQ0ksRUFBUCxDQUFVLE1BQVYsRUFBa0IsVUFBQ0MsR0FBRCxFQUFTO0FBQ3ZCLFVBQUcsQ0FBQ2hCLGFBQUQsSUFBa0JpQixNQUFNLENBQUNQLE1BQU0sQ0FBQ1EsR0FBUixDQUFOLElBQXNCRCxNQUFNLENBQUNELEdBQUcsQ0FBQ0UsR0FBTCxDQUFqRCxFQUE2RDtBQUN6RGxCLFFBQUFBLGFBQWEsR0FBRyxJQUFoQjtBQUNBRixRQUFBQSxPQUFPLENBQUNxQixJQUFSLENBQWEsT0FBYjtBQUNIO0FBQ0QsVUFBR25CLGFBQUgsRUFBaUI7QUFDYkYsUUFBQUEsT0FBTyxDQUFDcUIsSUFBUixDQUFhSCxHQUFHLENBQUNaLGNBQWpCLEVBQWlDWSxHQUFqQztBQUNBZixRQUFBQSxTQUFTLEdBQUdnQixNQUFNLENBQUNELEdBQUcsQ0FBQ0UsR0FBTCxDQUFsQjtBQUNILE9BSEQsTUFHTSxJQUFHakIsU0FBUyxJQUFJQSxTQUFTLElBQUlnQixNQUFNLENBQUNELEdBQUcsQ0FBQ0UsR0FBTCxDQUFuQyxFQUE2QztBQUMvQ2xCLFFBQUFBLGFBQWEsR0FBRyxJQUFoQjtBQUNBRixRQUFBQSxPQUFPLENBQUNxQixJQUFSLENBQWEsT0FBYjtBQUNIO0FBQ0osS0FaRDs7QUFjQVIsSUFBQUEsTUFBTSxDQUFDSSxFQUFQLENBQVUsT0FBVixFQUFtQixZQUFXO0FBQzFCSyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaO0FBQ0F2QixNQUFBQSxPQUFPLENBQUNxQixJQUFSLENBQWEsVUFBYjtBQUNBRyxNQUFBQSxVQUFVLENBQUNwQixXQUFELEVBQWEsSUFBYixDQUFWO0FBQ0gsS0FKRDs7QUFNQVMsSUFBQUEsTUFBTSxDQUFDSSxFQUFQLENBQVUsT0FBVixFQUFtQixVQUFBUSxLQUFLLEVBQUk7QUFDeEJILE1BQUFBLE9BQU8sQ0FBQ0csS0FBUixDQUFjQSxLQUFkO0FBQ0FaLE1BQUFBLE1BQU0sQ0FBQ2EsT0FBUDtBQUNILEtBSEQ7O0FBS0gsR0FwQ0QsRUFvQ0UsVUFBQ0MsR0FBRCxFQUFPO0FBQ0xILElBQUFBLFVBQVUsQ0FBQ3BCLFdBQUQsRUFBYSxJQUFiLENBQVY7QUFDQWtCLElBQUFBLE9BQU8sQ0FBQ0csS0FBUixDQUFjRSxHQUFkO0FBQ0gsR0F2Q0Q7QUF3Q0g7O0FBRUR2QixXQUFXLEc7O0FBRUlKLE8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0V2ZW50RW1pdHRlcn0gZnJvbSAnZXZlbnRzJztcbmltcG9ydCBPYnNlcnZlTG9ncyBmcm9tIFwiLi9PYnNlcnZlTG9nc1wiO1xuXG5jb25zdCBlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpLnNldE1heExpc3RlbmVycygwKTtcblxubGV0IGxpc3RlblN0YXJ0ZWQgPSBmYWxzZTtcbmxldCBsYXN0RG9jSWQgPSBudWxsO1xuXG5mdW5jdGlvbiBvYnNlcnZlTG9ncygpe1xuICAgIGxpc3RlblN0YXJ0ZWQgPSBmYWxzZTtcbiAgICBuZXcgT2JzZXJ2ZUxvZ3Moe1xuICAgICAgICB0eXBlOidzdGFydGVkJyxcbiAgICAgICAgY29sbGVjdGlvbk5hbWU6bnVsbCxcbiAgICAgICAgYXJndW1lbnRzOm51bGwsXG4gICAgICAgIGRhdGU6bmV3IERhdGUoKVxuICAgIH0pLnNhdmUoKS50aGVuKChyZXN1bHQpPT57XG4gICAgICAgIGNvbnN0IGN1cnNvciA9IE9ic2VydmVMb2dzXG4gICAgICAgICAgICAuZmluZCgpXG4gICAgICAgICAgICAudGFpbGFibGUoeyBhd2FpdGRhdGEgOiB0cnVlIH0pXG4gICAgICAgICAgICAuY3Vyc29yKCk7XG5cbiAgICAgICAgY3Vyc29yLm9uKCdkYXRhJywgKGRvYykgPT4ge1xuICAgICAgICAgICAgaWYoIWxpc3RlblN0YXJ0ZWQgJiYgU3RyaW5nKHJlc3VsdC5faWQpID09IFN0cmluZyhkb2MuX2lkKSApIHtcbiAgICAgICAgICAgICAgICBsaXN0ZW5TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBlbWl0dGVyLmVtaXQoJ3JlYWR5Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihsaXN0ZW5TdGFydGVkKXtcbiAgICAgICAgICAgICAgICBlbWl0dGVyLmVtaXQoZG9jLmNvbGxlY3Rpb25OYW1lLCBkb2MpO1xuICAgICAgICAgICAgICAgIGxhc3REb2NJZCA9IFN0cmluZyhkb2MuX2lkKTtcbiAgICAgICAgICAgIH1lbHNlIGlmKGxhc3REb2NJZCAmJiBsYXN0RG9jSWQgPT0gU3RyaW5nKGRvYy5faWQpKXtcbiAgICAgICAgICAgICAgICBsaXN0ZW5TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBlbWl0dGVyLmVtaXQoJ3JlYWR5Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGN1cnNvci5vbignY2xvc2UnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbG9zaW5nLi4uJyk7XG4gICAgICAgICAgICBlbWl0dGVyLmVtaXQoJ25vdHJlYWR5Jyk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KG9ic2VydmVMb2dzLDEwMDApO1xuICAgICAgICB9KTtcblxuICAgICAgICBjdXJzb3Iub24oJ2Vycm9yJywgZXJyb3IgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICBjdXJzb3IuZGVzdHJveSgpO1xuICAgICAgICB9KTtcblxuICAgIH0sKGVycik9PntcbiAgICAgICAgc2V0VGltZW91dChvYnNlcnZlTG9ncywxMDAwKTtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH0pO1xufVxuXG5vYnNlcnZlTG9ncygpO1xuXG5leHBvcnQgZGVmYXVsdCBlbWl0dGVyOyJdfQ==